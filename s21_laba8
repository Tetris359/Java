class ChickenThread extends Thread {
    @Override
    public void run() {
        for (int i = 0; i < 5; i++) {
            System.out.println("Курица");
            try {
                Thread.sleep(100); // Задержка 
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
class EggThread extends Thread {
    @Override
    public void run() {
        for (int i = 0; i < 5; i++) {
            System.out.println("Яйцо");
            try {
                Thread.sleep(100); // Задержка
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

public class ChickenOrEgg {
    public static void main(String[] args) {
        ChickenThread chickenThread = new ChickenThread();
        EggThread eggThread = new EggThread();

        chickenThread.start();
        eggThread.start();

        try {
            // ожидание завершения обоих потоков
            chickenThread.join();
            eggThread.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        // определение, какой поток завершился последним
        if (chickenThread.isAlive()) {
            System.out.println("Последнее слово: Курица");
        } else if (eggThread.isAlive()) {
            System.out.println("Последнее слово: Яйцо");
        } else {
            System.out.println("Оба потока завершились.");
        }
    }
}
